apiVersion: apps/v1
kind: Deployment
metadata:
  name: keycloak
  namespace: default
  labels:
    app: keycloak
spec:
  replicas: 1
  selector:
    matchLabels:
      app: keycloak
  template:
    metadata:
      labels:
        app: keycloak
    spec:
      containers:
      - name: keycloak
        image: quay.io/keycloak/keycloak:latest
        ports:
        - containerPort: 8080
        env:
        - name: KC_DB
          value: "postgres"
        - name: KC_DB_URL
          value: "jdbc:postgresql://keycloakdb:5432/keycloak"
        - name: KC_DB_USERNAME
          valueFrom:
            secretKeyRef:
              name: microservices-secrets
              key: POSTGRES_USER
        - name: KC_DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: microservices-secrets
              key: POSTGRES_PASSWORD
        - name: KEYCLOAK_ADMIN
          valueFrom:
            secretKeyRef:
              name: microservices-secrets
              key: KEYCLOAK_ADMIN
        - name: KEYCLOAK_ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              name: microservices-secrets
              key: KEYCLOAK_ADMIN_PASSWORD
        - name: KC_LOG_LEVEL
          value: "info"
        - name: KC_METRICS_ENABLED
          value: "true"
        - name: KC_HEALTH_ENABLED
          value: "true"
        command:
        - /opt/keycloak/bin/kc.sh
        - start-dev
        - --import-realm
        volumeMounts:
        - name: keycloak-realms
          mountPath: /opt/keycloak/data/import
          readOnly: true
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "2Gi"
            cpu: "1"
      volumes:
      - name: keycloak-realms
        configMap:
          name: keycloak-realms
---
apiVersion: v1
kind: Service
metadata:
  name: keycloak
  namespace: default
  labels:
    app: keycloak
spec:
  type: ClusterIP
  ports:
  - port: 8080
    targetPort: 8080
    protocol: TCP
  selector:
    app: keycloak
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: keycloak-realms
  namespace: default
data:
  authentication-realm.json: |
    {
      "id" : "6c2f806a-79d0-4813-9e7d-92912d622e67",
      "realm" : "authentication",
      "notBefore" : 0,
      "defaultSignatureAlgorithm" : "RS256",
      "revokeRefreshToken" : false,
      "refreshTokenMaxReuse" : 0,
      "accessTokenLifespan" : 300,
      "accessTokenLifespanForImplicitFlow" : 900,
      "ssoSessionIdleTimeout" : 1800,
      "ssoSessionMaxLifespan" : 36000,
      "ssoSessionIdleTimeoutRememberMe" : 0,
      "ssoSessionMaxLifespanRememberMe" : 0,
      "offlineSessionIdleTimeout" : 2592000,
      "offlineSessionMaxLifespanEnabled" : false,
      "offlineSessionMaxLifespan" : 5184000,
      "clientSessionIdleTimeout" : 0,
      "clientSessionMaxLifespan" : 0,
      "clientOfflineSessionIdleTimeout" : 0,
      "clientOfflineSessionMaxLifespan" : 0,
      "accessCodeLifespan" : 60,
      "accessCodeLifespanUserAction" : 300,
      "accessCodeLifespanLogin" : 1800,
      "actionTokenGeneratedByAdminLifespan" : 43200,
      "actionTokenGeneratedByUserLifespan" : 300,
      "oauth2DeviceCodeLifespan" : 600,
      "oauth2DevicePollingInterval" : 5,
      "enabled" : true,
      "sslRequired" : "external",
      "registrationAllowed" : false,
      "registrationEmailAsUsername" : false,
      "rememberMe" : false,
      "verifyEmail" : false,
      "loginWithEmailAllowed" : true,
      "duplicateEmailsAllowed" : false,
      "resetPasswordAllowed" : false,
      "editUsernameAllowed" : false,
      "bruteForceProtected" : false,
      "permanentLockout" : false,
      "maxTemporaryLockouts" : 0,
      "bruteForceStrategy" : "MULTIPLE",
      "maxFailureWaitSeconds" : 900,
      "minimumQuickLoginWaitSeconds" : 60,
      "waitIncrementSeconds" : 60,
      "quickLoginCheckMilliSeconds" : 1000,
      "maxDeltaTimeSeconds" : 43200,
      "failureFactor" : 30,
      "roles" : {
        "realm" : [ {
          "id" : "daa953f6-5581-48da-bc49-d95948d09b02",
          "name" : "default-roles-authentication",
          "description" : "${role_default-roles}",
          "composite" : true,
          "composites" : {
            "realm" : [ "offline_access", "uma_authorization" ],
            "client" : {
              "account" : [ "view-profile", "manage-account" ]
            }
          },
          "clientRole" : false,
          "containerId" : "6c2f806a-79d0-4813-9e7d-92912d622e67",
          "attributes" : { }
        }, {
          "id" : "fc848a48-9613-49e0-b927-2b26350c7be7",
          "name" : "offline_access",
          "description" : "${role_offline-access}",
          "composite" : false,
          "clientRole" : false,
          "containerId" : "6c2f806a-79d0-4813-9e7d-92912d622e67",
          "attributes" : { }
        }, {
          "id" : "897a3b0a-6a57-471a-8780-3ee53e540538",
          "name" : "uma_authorization",
          "description" : "${role_uma_authorization}",
          "composite" : false,
          "clientRole" : false,
          "containerId" : "6c2f806a-79d0-4813-9e7d-92912d622e67",
          "attributes" : { }
        } ],
        "client" : {
          "realm-management" : [ {
            "id" : "c283c7ad-2bdc-4d9f-bb8b-ad94c47f84e9",
            "name" : "query-clients",
            "description" : "${role_query-clients}",
            "composite" : false,
            "clientRole" : true,
            "containerId" : "b8e60716-e2ff-4b72-a0b6-c5b020c6da2e",
            "attributes" : { }
          }, {
            "id" : "b4b8f447-4574-4879-8620-5c7cb5e61fc6",
            "name" : "realm-admin",
            "description" : "${role_realm-admin}",
            "composite" : true,
            "composites" : {
              "client" : {
                "realm-management" : [ "query-clients", "impersonation", "view-events", "manage-realm", "view-realm", "view-clients", "manage-authorization", "query-users", "manage-users", "create-client", "view-identity-providers", "manage-identity-providers", "view-users", "query-groups", "manage-clients", "query-realms", "manage-events", "view-authorization" ]
              }
            },
            "clientRole" : true,
            "containerId" : "b8e60716-e2ff-4b72-a0b6-c5b020c6da2e",
            "attributes" : { }
          }, {
            "id" : "fe9424e1-9358-44b0-aba8-24f1c0604abc",
            "name" : "impersonation",
            "description" : "${role_impersonation}",
            "composite" : false,
            "clientRole" : true,
            "containerId" : "b8e60716-e2ff-4b72-a0b6-c5b020c6da2e",
            "attributes" : { }
          }, {
            "id" : "a67c4852-6ec8-4bc4-a990-be35ed46645c",
            "name" : "manage-realm",
            "description" : "${role_manage-realm}",
            "composite" : false,
            "clientRole" : true,
            "containerId" : "b8e60716-e2ff-4b72-a0b6-c5b020c6da2e",
            "attributes" : { }
          }, {
            "id" : "3c2b8ae1-a927-481b-837d-f8f5a6f4a0f0",
            "name" : "view-events",
            "description" : "${role_view-events}",
            "composite" : false,
            "clientRole" : true,
            "containerId" : "b8e60716-e2ff-4b72-a0b6-c5b020c6da2e",
            "attributes" : { }
          }, {
            "id" : "8dfff41c-4781-4267-a98b-95812baf667e",
            "name" : "view-realm",
            "description" : "${role_view-realm}",
            "composite" : false,
            "clientRole" : true,
            "containerId" : "b8e60716-e2ff-4b72-a0b6-c5b020c6da2e",
            "attributes" : { }
          }, {
            "id" : "e8ef63ba-62fe-469d-a1e7-28e7ff794087",
            "name" : "view-clients",
            "description" : "${role_view-clients}",
            "composite" : true,
            "composites" : {
              "client" : {
                "realm-management" : [ "query-clients" ]
              }
            },
            "clientRole" : true,
            "containerId" : "b8e60716-e2ff-4b72-a0b6-c5b020c6da2e",
            "attributes" : { }
          }, {
            "id" : "8757f244-16d8-4157-a3e4-4fa01bc4570c",
            "name" : "manage-authorization",
            "description" : "${role_manage-authorization}",
            "composite" : false,
            "clientRole" : true,
            "containerId" : "b8e60716-e2ff-4b72-a0b6-c5b020c6da2e",
            "attributes" : { }
          }, {
            "id" : "9ad2aeae-2218-4980-a14a-380357721dae",
            "name" : "query-users",
            "description" : "${role_query-users}",
            "composite" : false,
            "clientRole" : true,
            "containerId" : "b8e60716-e2ff-4b72-a0b6-c5b020c6da2e",
            "attributes" : { }
          }, {
            "id" : "86c1669e-7a43-46c5-b4f4-6a82bf2ab18e",
            "name" : "manage-users",
            "description" : "${role_manage-users}",
            "composite" : false,
            "clientRole" : true,
            "containerId" : "b8e60716-e2ff-4b72-a0b6-c5b020c6da2e",
            "attributes" : { }
          }, {
            "id" : "1ab71da8-1fce-45a4-a63a-cef257264053",
            "name" : "create-client",
            "description" : "${role_create-client}",
            "composite" : false,
            "clientRole" : true,
            "containerId" : "b8e60716-e2ff-4b72-a0b6-c5b020c6da2e",
            "attributes" : { }
          }, {
            "id" : "3e602f38-456a-4343-a2f5-5383097ae120",
            "name" : "view-identity-providers",
            "description" : "${role_view-identity-providers}",
            "composite" : false,
            "clientRole" : true,
            "containerId" : "b8e60716-e2ff-4b72-a0b6-c5b020c6da2e",
            "attributes" : { }
          }, {
            "id" : "1530deb3-31b7-4f40-8de8-6179fb522198",
            "name" : "manage-identity-providers",
            "description" : "${role_manage-identity-providers}",
            "composite" : false,
            "clientRole" : true,
            "containerId" : "b8e60716-e2ff-4b72-a0b6-c5b020c6da2e",
            "attributes" : { }
          }, {
            "id" : "5c939016-abd1-4351-87e1-271b5d16a6c6",
            "name" : "query-groups",
            "description" : "${role_query-groups}",
            "composite" : false,
            "clientRole" : true,
            "containerId" : "b8e60716-e2ff-4b72-a0b6-c5b020c6da2e",
            "attributes" : { }
          }, {
            "id" : "6f14761f-26f5-4223-8996-439120726021",
            "name" : "view-users",
            "description" : "${role_view-users}",
            "composite" : true,
            "composites" : {
              "client" : {
                "realm-management" : [ "query-users", "query-groups" ]
              }
            },
            "clientRole" : true,
            "containerId" : "b8e60716-e2ff-4b72-a0b6-c5b020c6da2e",
            "attributes" : { }
          }, {
            "id" : "b0a51308-e286-4f8e-93fb-8ab23dc4ee0a",
            "name" : "manage-clients",
            "description" : "${role_manage-clients}",
            "composite" : false,
            "clientRole" : true,
            "containerId" : "b8e60716-e2ff-4b72-a0b6-c5b020c6da2e",
            "attributes" : { }
          }, {
            "id" : "10ae1df3-2b82-4796-a88b-c38215197a64",
            "name" : "query-realms",
            "description" : "${role_query-realms}",
            "composite" : false,
            "clientRole" : true,
            "containerId" : "b8e60716-e2ff-4b72-a0b6-c5b020c6da2e",
            "attributes" : { }
          }, {
            "id" : "83da1bb3-0579-46d7-90df-9dada848b223",
            "name" : "manage-events",
            "description" : "${role_manage-events}",
            "composite" : false,
            "clientRole" : true,
            "containerId" : "b8e60716-e2ff-4b72-a0b6-c5b020c6da2e",
            "attributes" : { }
          }, {
            "id" : "bffff78b-c9e1-43e5-8c51-d5c279df0e3a",
            "name" : "view-authorization",
            "description" : "${role_view-authorization}",
            "composite" : false,
            "clientRole" : true,
            "containerId" : "b8e60716-e2ff-4b72-a0b6-c5b020c6da2e",
            "attributes" : { }
          } ],
          "store-app" : [ ],
          "security-admin-console" : [ ],
          "admin-cli" : [ ],
          "account-console" : [ ],
          "broker" : [ {
            "id" : "57facac3-6840-4ae6-9406-27bcf1f300ed",
            "name" : "read-token",
            "description" : "${role_read-token}",
            "composite" : false,
            "clientRole" : true,
            "containerId" : "f0b06766-cf2f-4d3d-813e-8788e36643af",
            "attributes" : { }
          } ],
          "account" : [ {
            "id" : "d774800b-c56f-4c0e-b445-0a8bf17dbdaa",
            "name" : "delete-account",
            "description" : "${role_delete-account}",
            "composite" : false,
            "clientRole" : true,
            "containerId" : "d21e46d9-fe93-49e2-94ad-dee8ce8e4852",
            "attributes" : { }
          }, {
            "id" : "64888dbf-7c2b-4365-8727-a6fab030aa06",
            "name" : "view-consent",
            "description" : "${role_view-consent}",
            "composite" : false,
            "clientRole" : true,
            "containerId" : "d21e46d9-fe93-49e2-94ad-dee8ce8e4852",
            "attributes" : { }
          }, {
            "id" : "fa77ab37-b494-45eb-885d-cd19a880d12b",
            "name" : "view-profile",
            "description" : "${role_view-profile}",
            "composite" : false,
            "clientRole" : true,
            "containerId" : "d21e46d9-fe93-49e2-94ad-dee8ce8e4852",
            "attributes" : { }
          }, {
            "id" : "84627fd2-47a5-40c3-986b-7588ddfdfc63",
            "name" : "manage-account-links",
            "description" : "${role_manage-account-links}",
            "composite" : false,
            "clientRole" : true,
            "containerId" : "d21e46d9-fe93-49e2-94ad-dee8ce8e4852",
            "attributes" : { }
          }, {
            "id" : "afd2dd64-acf5-4b01-890c-7a2215b97020",
            "name" : "manage-account",
            "description" : "${role_manage-account}",
            "composite" : true,
            "composites" : {
              "client" : {
                "account" : [ "manage-account-links" ]
              }
            },
            "clientRole" : true,
            "containerId" : "d21e46d9-fe93-49e2-94ad-dee8ce8e4852",
            "attributes" : { }
          }, {
            "id" : "c3a6860e-8f4c-4b34-8f1e-abe32026dc50",
            "name" : "manage-consent",
            "description" : "${role_manage-consent}",
            "composite" : true,
            "composites" : {
              "client" : {
                "account" : [ "view-consent" ]
              }
            },
            "clientRole" : true,
            "containerId" : "d21e46d9-fe93-49e2-94ad-dee8ce8e4852",
            "attributes" : { }
          }, {
            "id" : "5ceb165d-1ee9-4b20-901d-39a3edece8e7",
            "name" : "view-applications",
            "description" : "${role_view-applications}",
            "composite" : false,
            "clientRole" : true,
            "containerId" : "d21e46d9-fe93-49e2-94ad-dee8ce8e4852",
            "attributes" : { }
          }, {
            "id" : "4d1a50bc-8420-4bd8-8d50-dc0649b69951",
            "name" : "view-groups",
            "description" : "${role_view-groups}",
            "composite" : false,
            "clientRole" : true,
            "containerId" : "d21e46d9-fe93-49e2-94ad-dee8ce8e4852",
            "attributes" : { }
          } ]
        }
      },
      "groups" : [ ],
      "defaultRole" : {
        "id" : "daa953f6-5581-48da-bc49-d95948d09b02",
        "name" : "default-roles-authentication",
        "description" : "${role_default-roles}",
        "composite" : true,
        "clientRole" : false,
        "containerId" : "6c2f806a-79d0-4813-9e7d-92912d622e67"
      },
      "requiredCredentials" : [ "password" ],
      "otpPolicyType" : "totp",
      "otpPolicyAlgorithm" : "HmacSHA1",
      "otpPolicyInitialCounter" : 0,
      "otpPolicyDigits" : 6,
      "otpPolicyLookAheadWindow" : 1,
      "otpPolicyPeriod" : 30,
      "otpPolicyCodeReusable" : false,
      "otpSupportedApplications" : [ "totpAppFreeOTPName", "totpAppGoogleName", "totpAppMicrosoftAuthenticatorName" ],
      "localizationTexts" : { },
      "webAuthnPolicyRpEntityName" : "keycloak",
      "webAuthnPolicySignatureAlgorithms" : [ "ES256", "RS256" ],
      "webAuthnPolicyRpId" : "",
      "webAuthnPolicyAttestationConveyancePreference" : "not specified",
      "webAuthnPolicyAuthenticatorAttachment" : "not specified",
      "webAuthnPolicyRequireResidentKey" : "not specified",
      "webAuthnPolicyUserVerificationRequirement" : "not specified",
      "webAuthnPolicyCreateTimeout" : 0,
      "webAuthnPolicyAvoidSameAuthenticatorRegister" : false,
      "webAuthnPolicyAcceptableAaguids" : [ ],
      "webAuthnPolicyExtraOrigins" : [ ],
      "webAuthnPolicyPasswordlessRpEntityName" : "keycloak",
      "webAuthnPolicyPasswordlessSignatureAlgorithms" : [ "ES256", "RS256" ],
      "webAuthnPolicyPasswordlessRpId" : "",
      "webAuthnPolicyPasswordlessAttestationConveyancePreference" : "not specified",
      "webAuthnPolicyPasswordlessAuthenticatorAttachment" : "not specified",
      "webAuthnPolicyPasswordlessRequireResidentKey" : "not specified",
      "webAuthnPolicyPasswordlessUserVerificationRequirement" : "not specified",
      "webAuthnPolicyPasswordlessCreateTimeout" : 0,
      "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister" : false,
      "webAuthnPolicyPasswordlessAcceptableAaguids" : [ ],
      "webAuthnPolicyPasswordlessExtraOrigins" : [ ],
      "users" : [ {
        "id" : "018d8d9b-688a-41aa-ba44-fae1cf471d00",
        "username" : "melek",
        "firstName" : "melek",
        "lastName" : "melek",
        "email" : "melek@store.com",
        "emailVerified" : true,
        "createdTimestamp" : 1751803305309,
        "enabled" : true,
        "totp" : false,
        "credentials" : [ {
          "id" : "6cb2cb2e-0dea-4017-be43-7488c6b8ea52",
          "type" : "password",
          "userLabel" : "My password",
          "createdDate" : 1751803313338,
          "secretData" : "{\"value\":\"2SgED6jiY4EPzJpF211yW/pwhVVvs2niTG/X6suGNDI=\",\"salt\":\"YJ0YsgMl/PfuNBOrxPOOdA==\",\"additionalParameters\":{}}",
          "credentialData" : "{\"hashIterations\":5,\"algorithm\":\"argon2\",\"additionalParameters\":{\"hashLength\":[\"32\"],\"memory\":[\"7168\"],\"type\":[\"id\"],\"version\":[\"1.3\"],\"parallelism\":[\"1\"]}}"
        } ],
        "disableableCredentialTypes" : [ ],
        "requiredActions" : [ ],
        "realmRoles" : [ "default-roles-authentication" ],
        "notBefore" : 0,
        "groups" : [ ]
      } ],
      "scopeMappings" : [ {
        "clientScope" : "offline_access",
        "roles" : [ "offline_access" ]
      } ],
      "clientScopeMappings" : {
        "account" : [ {
          "client" : "account-console",
          "roles" : [ "manage-account", "view-groups" ]
        } ]
      },
      "clients" : [ {
        "id" : "d21e46d9-fe93-49e2-94ad-dee8ce8e4852",
        "clientId" : "account",
        "name" : "${client_account}",
        "rootUrl" : "${authBaseUrl}",
        "baseUrl" : "/realms/authentication/account/",
        "surrogateAuthRequired" : false,
        "enabled" : true,
        "alwaysDisplayInConsole" : false,
        "clientAuthenticatorType" : "client-secret",
        "redirectUris" : [ "/realms/authentication/account/*" ],
        "webOrigins" : [ ],
        "notBefore" : 0,
        "bearerOnly" : false,
        "consentRequired" : false,
        "standardFlowEnabled" : true,
        "implicitFlowEnabled" : false,
        "directAccessGrantsEnabled" : false,
        "serviceAccountsEnabled" : false,
        "publicClient" : true,
        "frontchannelLogout" : false,
        "protocol" : "openid-connect",
        "attributes" : {
          "realm_client" : "false",
          "post.logout.redirect.uris" : "+"
        },
        "authenticationFlowBindingOverrides" : { },
        "fullScopeAllowed" : false,
        "nodeReRegistrationTimeout" : 0,
        "defaultClientScopes" : [ "web-origins", "acr", "profile", "roles", "basic", "email" ],
        "optionalClientScopes" : [ "address", "phone", "organization", "offline_access", "microprofile-jwt" ]
      }, {
        "id" : "1d655271-75ec-4995-b1b1-425af909c37c",
        "clientId" : "account-console",
        "name" : "${client_account-console}",
        "rootUrl" : "${authBaseUrl}",
        "baseUrl" : "/realms/authentication/account/",
        "surrogateAuthRequired" : false,
        "enabled" : true,
        "alwaysDisplayInConsole" : false,
        "clientAuthenticatorType" : "client-secret",
        "redirectUris" : [ "/realms/authentication/account/*" ],
        "webOrigins" : [ ],
        "notBefore" : 0,
        "bearerOnly" : false,
        "consentRequired" : false,
        "standardFlowEnabled" : true,
        "implicitFlowEnabled" : false,
        "directAccessGrantsEnabled" : false,
        "serviceAccountsEnabled" : false,
        "publicClient" : true,
        "frontchannelLogout" : false,
        "protocol" : "openid-connect",
        "attributes" : {
          "realm_client" : "false",
          "post.logout.redirect.uris" : "+",
          "pkce.code.challenge.method" : "S256"
        },
        "authenticationFlowBindingOverrides" : { },
        "fullScopeAllowed" : false,
        "nodeReRegistrationTimeout" : 0,
        "protocolMappers" : [ {
          "id" : "eb119241-75fb-45e1-8e1c-8e7c97b18e37",
          "name" : "audience resolve",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-audience-resolve-mapper",
          "consentRequired" : false,
          "config" : { }
        } ],
        "defaultClientScopes" : [ "web-origins", "acr", "profile", "roles", "basic", "email" ],
        "optionalClientScopes" : [ "address", "phone", "organization", "offline_access", "microprofile-jwt" ]
      }, {
        "id" : "cfa8c0fb-f478-4bd7-b7d5-08f64dbca607",
        "clientId" : "admin-cli",
        "name" : "${client_admin-cli}",
        "surrogateAuthRequired" : false,
        "enabled" : true,
        "alwaysDisplayInConsole" : false,
        "clientAuthenticatorType" : "client-secret",
        "redirectUris" : [ ],
        "webOrigins" : [ ],
        "notBefore" : 0,
        "bearerOnly" : false,
        "consentRequired" : false,
        "standardFlowEnabled" : false,
        "implicitFlowEnabled" : false,
        "directAccessGrantsEnabled" : true,
        "serviceAccountsEnabled" : false,
        "publicClient" : true,
        "frontchannelLogout" : false,
        "protocol" : "openid-connect",
        "attributes" : {
          "realm_client" : "false",
          "client.use.lightweight.access.token.enabled" : "true"
        },
        "authenticationFlowBindingOverrides" : { },
        "fullScopeAllowed" : true,
        "nodeReRegistrationTimeout" : 0,
        "defaultClientScopes" : [ "web-origins", "acr", "profile", "roles", "basic", "email" ],
        "optionalClientScopes" : [ "address", "phone", "organization", "offline_access", "microprofile-jwt" ]
      }, {
        "id" : "f0b06766-cf2f-4d3d-813e-8788e36643af",
        "clientId" : "broker",
        "name" : "${client_broker}",
        "surrogateAuthRequired" : false,
        "enabled" : true,
        "alwaysDisplayInConsole" : false,
        "clientAuthenticatorType" : "client-secret",
        "redirectUris" : [ ],
        "webOrigins" : [ ],
        "notBefore" : 0,
        "bearerOnly" : true,
        "consentRequired" : false,
        "standardFlowEnabled" : true,
        "implicitFlowEnabled" : false,
        "directAccessGrantsEnabled" : false,
        "serviceAccountsEnabled" : false,
        "publicClient" : false,
        "frontchannelLogout" : false,
        "protocol" : "openid-connect",
        "attributes" : {
          "realm_client" : "true"
        },
        "authenticationFlowBindingOverrides" : { },
        "fullScopeAllowed" : false,
        "nodeReRegistrationTimeout" : 0,
        "defaultClientScopes" : [ "web-origins", "acr", "profile", "roles", "basic", "email" ],
        "optionalClientScopes" : [ "address", "phone", "organization", "offline_access", "microprofile-jwt" ]
      }, {
        "id" : "b8e60716-e2ff-4b72-a0b6-c5b020c6da2e",
        "clientId" : "realm-management",
        "name" : "${client_realm-management}",
        "surrogateAuthRequired" : false,
        "enabled" : true,
        "alwaysDisplayInConsole" : false,
        "clientAuthenticatorType" : "client-secret",
        "redirectUris" : [ ],
        "webOrigins" : [ ],
        "notBefore" : 0,
        "bearerOnly" : true,
        "consentRequired" : false,
        "standardFlowEnabled" : true,
        "implicitFlowEnabled" : false,
        "directAccessGrantsEnabled" : false,
        "serviceAccountsEnabled" : false,
        "publicClient" : false,
        "frontchannelLogout" : false,
        "protocol" : "openid-connect",
        "attributes" : {
          "realm_client" : "true"
        },
        "authenticationFlowBindingOverrides" : { },
        "fullScopeAllowed" : false,
        "nodeReRegistrationTimeout" : 0,
        "defaultClientScopes" : [ "web-origins", "acr", "profile", "roles", "basic", "email" ],
        "optionalClientScopes" : [ "address", "phone", "organization", "offline_access", "microprofile-jwt" ]
      }, {
        "id" : "c64877e0-0959-4c3b-bb66-c88e247eda90",
        "clientId" : "security-admin-console",
        "name" : "${client_security-admin-console}",
        "rootUrl" : "${authAdminUrl}",
        "baseUrl" : "/admin/authentication/console/",
        "surrogateAuthRequired" : false,
        "enabled" : true,
        "alwaysDisplayInConsole" : false,
        "clientAuthenticatorType" : "client-secret",
        "redirectUris" : [ "/admin/authentication/console/*" ],
        "webOrigins" : [ "+" ],
        "notBefore" : 0,
        "bearerOnly" : false,
        "consentRequired" : false,
        "standardFlowEnabled" : true,
        "implicitFlowEnabled" : false,
        "directAccessGrantsEnabled" : false,
        "serviceAccountsEnabled" : false,
        "publicClient" : true,
        "frontchannelLogout" : false,
        "protocol" : "openid-connect",
        "attributes" : {
          "realm_client" : "false",
          "client.use.lightweight.access.token.enabled" : "true",
          "post.logout.redirect.uris" : "+",
          "pkce.code.challenge.method" : "S256"
        },
        "authenticationFlowBindingOverrides" : { },
        "fullScopeAllowed" : true,
        "nodeReRegistrationTimeout" : 0,
        "protocolMappers" : [ {
          "id" : "2ac35bc6-17d7-4dc2-9979-9c733ebc5842",
          "name" : "locale",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-attribute-mapper",
          "consentRequired" : false,
          "config" : {
            "introspection.token.claim" : "true",
            "userinfo.token.claim" : "true",
            "user.attribute" : "locale",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "locale",
            "jsonType.label" : "String"
          }
        } ],
        "defaultClientScopes" : [ "web-origins", "acr", "profile", "roles", "basic", "email" ],
        "optionalClientScopes" : [ "address", "phone", "organization", "offline_access", "microprofile-jwt" ]
      }, {
        "id" : "0b3e40ec-129a-43b0-8cc9-5a4341ebbb31",
        "clientId" : "store-app",
        "name" : "store-app",
        "description" : "store-app",
        "rootUrl" : "",
        "adminUrl" : "",
        "baseUrl" : "",
        "surrogateAuthRequired" : false,
        "enabled" : true,
        "alwaysDisplayInConsole" : true,
        "clientAuthenticatorType" : "client-secret",
        "secret" : "k7YIkMsWSA8UhokbJxgnxrEurO35FpZe",
        "redirectUris" : [ "/*" ],
        "webOrigins" : [ "/*" ],
        "notBefore" : 0,
        "bearerOnly" : false,
        "consentRequired" : false,
        "standardFlowEnabled" : true,
        "implicitFlowEnabled" : true,
        "directAccessGrantsEnabled" : true,
        "serviceAccountsEnabled" : false,
        "publicClient" : false,
        "frontchannelLogout" : true,
        "protocol" : "openid-connect",
        "attributes" : {
          "access.token.lifespan" : "3600",
          "client.secret.creation.time" : "1751803225",
          "request.object.signature.alg" : "any",
          "request.object.encryption.alg" : "any",
          "client.introspection.response.allow.jwt.claim.enabled" : "false",
          "standard.token.exchange.enabled" : "false",
          "frontchannel.logout.session.required" : "true",
          "oauth2.device.authorization.grant.enabled" : "false",
          "backchannel.logout.revoke.offline.tokens" : "false",
          "use.refresh.tokens" : "true",
          "realm_client" : "false",
          "oidc.ciba.grant.enabled" : "false",
          "client.use.lightweight.access.token.enabled" : "false",
          "backchannel.logout.session.required" : "true",
          "client_credentials.use_refresh_token" : "false",
          "request.object.required" : "not required",
          "access.token.header.type.rfc9068" : "false",
          "acr.loa.map" : "{}",
          "require.pushed.authorization.requests" : "false",
          "tls.client.certificate.bound.access.tokens" : "false",
          "display.on.consent.screen" : "false",
          "request.object.encryption.enc" : "any",
          "token.response.type.bearer.lower-case" : "false"
        },
        "authenticationFlowBindingOverrides" : { },
        "fullScopeAllowed" : true,
        "nodeReRegistrationTimeout" : -1,
        "defaultClientScopes" : [ "web-origins", "acr", "profile", "roles", "basic", "email" ],
        "optionalClientScopes" : [ "address", "phone", "organization", "offline_access", "microprofile-jwt" ]
      } ],
      "clientScopes" : [ {
        "id" : "6e19761c-5f25-4f7e-80a6-30a98ff1eaff",
        "name" : "saml_organization",
        "description" : "Organization Membership",
        "protocol" : "saml",
        "attributes" : {
          "display.on.consent.screen" : "false"
        },
        "protocolMappers" : [ {
          "id" : "5121f713-d758-4399-abc9-cf091b61d60d",
          "name" : "organization",
          "protocol" : "saml",
          "protocolMapper" : "saml-organization-membership-mapper",
          "consentRequired" : false,
          "config" : { }
        } ]
      }, {
        "id" : "1f77f688-d40f-4bf9-8fe8-f1f0bb3e3eae",
        "name" : "email",
        "description" : "OpenID Connect built-in scope: email",
        "protocol" : "openid-connect",
        "attributes" : {
          "include.in.token.scope" : "true",
          "consent.screen.text" : "${emailScopeConsentText}",
          "display.on.consent.screen" : "true"
        },
        "protocolMappers" : [ {
          "id" : "bcdc64fd-6b7a-41d4-8e19-5c2721e6249d",
          "name" : "email verified",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-property-mapper",
          "consentRequired" : false,
          "config" : {
            "introspection.token.claim" : "true",
            "userinfo.token.claim" : "true",
            "user.attribute" : "emailVerified",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "email_verified",
            "jsonType.label" : "boolean"
          }
        }, {
          "id" : "f734aa1a-cbd4-459e-9d87-1e2b90a1ab6b",
          "name" : "email",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-attribute-mapper",
          "consentRequired" : false,
          "config" : {
            "introspection.token.claim" : "true",
            "userinfo.token.claim" : "true",
            "user.attribute" : "email",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "email",
            "jsonType.label" : "String"
          }
        } ]
      }, {
        "id" : "8b00519d-b3e7-4469-bc57-3a6b5603deb7",
        "name" : "service_account",
        "description" : "Specific scope for a client enabled for service accounts",
        "protocol" : "openid-connect",
        "attributes" : {
          "include.in.token.scope" : "false",
          "display.on.consent.screen" : "false"
        },
        "protocolMappers" : [ {
          "id" : "44217b11-692f-4b9b-b81b-0257ee5700bc",
          "name" : "Client Host",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usersessionmodel-note-mapper",
          "consentRequired" : false,
          "config" : {
            "user.session.note" : "clientHost",
            "id.token.claim" : "true",
            "introspection.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "clientHost",
            "jsonType.label" : "String"
          }
        }, {
          "id" : "96333926-431c-4e01-8526-17ee2f719ec0",
          "name" : "Client ID",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usersessionmodel-note-mapper",
          "consentRequired" : false,
          "config" : {
            "user.session.note" : "client_id",
            "id.token.claim" : "true",
            "introspection.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "client_id",
            "jsonType.label" : "String"
          }
        }, {
          "id" : "28f22d65-b4d9-4358-88b4-ff9bfdcfbe27",
          "name" : "Client IP Address",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usersessionmodel-note-mapper",
          "consentRequired" : false,
          "config" : {
            "user.session.note" : "clientAddress",
            "id.token.claim" : "true",
            "introspection.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "clientAddress",
            "jsonType.label" : "String"
          }
        } ]
      }, {
        "id" : "8bb3c222-22a2-48b4-8f5e-1f6450cb3acc",
        "name" : "address",
        "description" : "OpenID Connect built-in scope: address",
        "protocol" : "openid-connect",
        "attributes" : {
          "include.in.token.scope" : "true",
          "consent.screen.text" : "${addressScopeConsentText}",
          "display.on.consent.screen" : "true"
        },
        "protocolMappers" : [ {
          "id" : "5bca39a8-7016-44cf-b20f-9b99999d6252",
          "name" : "address",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-address-mapper",
          "consentRequired" : false,
          "config" : {
            "user.attribute.formatted" : "formatted",
            "user.attribute.country" : "country",
            "introspection.token.claim" : "true",
            "user.attribute.postal_code" : "postal_code",
            "userinfo.token.claim" : "true",
            "user.attribute.street" : "street",
            "id.token.claim" : "true",
            "user.attribute.region" : "region",
            "access.token.claim" : "true",
            "user.attribute.locality" : "locality"
          }
        } ]
      }, {
        "id" : "dfe5a7f5-3a32-4222-a8c5-30e2c741f005",
        "name" : "role_list",
        "description" : "SAML role list",
        "protocol" : "saml",
        "attributes" : {
          "consent.screen.text" : "${samlRoleListScopeConsentText}",
          "display.on.consent.screen" : "true"
        },
        "protocolMappers" : [ {
          "id" : "3b15d56d-c593-4e34-b9f7-21228b800c83",
          "name" : "role list",
          "protocol" : "saml",
          "protocolMapper" : "saml-role-list-mapper",
          "consentRequired" : false,
          "config" : {
            "single" : "false",
            "attribute.nameformat" : "Basic",
            "attribute.name" : "Role"
          }
        } ]
      }, {
        "id" : "8c9aeba5-9fc1-40e9-b5a7-bd76ee0708a3",
        "name" : "phone",
        "description" : "OpenID Connect built-in scope: phone",
        "protocol" : "openid-connect",
        "attributes" : {
          "include.in.token.scope" : "true",
          "consent.screen.text" : "${phoneScopeConsentText}",
          "display.on.consent.screen" : "true"
        },
        "protocolMappers" : [ {
          "id" : "abff49df-7068-44c0-afad-07a7d07c4dc6",
          "name" : "phone number",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-attribute-mapper",
          "consentRequired" : false,
          "config" : {
            "introspection.token.claim" : "true",
            "userinfo.token.claim" : "true",
            "user.attribute" : "phoneNumber",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "phone_number",
            "jsonType.label" : "String"
          }
        }, {
          "id" : "9099859a-294b-428e-bdb9-d26a093ce4da",
          "name" : "phone number verified",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-attribute-mapper",
          "consentRequired" : false,
          "config" : {
            "introspection.token.claim" : "true",
            "userinfo.token.claim" : "true",
            "user.attribute" : "phoneNumberVerified",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "phone_number_verified",
            "jsonType.label" : "boolean"
          }
        } ]
      }, {
        "id" : "349fea4e-5613-4bb3-910d-4515c050450d",
        "name" : "roles",
        "description" : "OpenID Connect scope for add user roles to the access token",
        "protocol" : "openid-connect",
        "attributes" : {
          "include.in.token.scope" : "false",
          "consent.screen.text" : "${rolesScopeConsentText}",
          "display.on.consent.screen" : "true"
        },
        "protocolMappers" : [ {
          "id" : "f42cb60d-5b3e-4080-b36f-557ef5b55c1d",
          "name" : "audience resolve",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-audience-resolve-mapper",
          "consentRequired" : false,
          "config" : {
            "introspection.token.claim" : "true",
            "access.token.claim" : "true"
          }
        }, {
          "id" : "4c53f87a-1ab0-4c0d-a9b0-543fce76fa26",
          "name" : "realm roles",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-realm-role-mapper",
          "consentRequired" : false,
          "config" : {
            "user.attribute" : "foo",
            "introspection.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "realm_access.roles",
            "jsonType.label" : "String",
            "multivalued" : "true"
          }
        }, {
          "id" : "4f435467-7531-4d70-a47f-0b7669b6045f",
          "name" : "client roles",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-client-role-mapper",
          "consentRequired" : false,
          "config" : {
            "user.attribute" : "foo",
            "introspection.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "resource_access.${client_id}.roles",
            "jsonType.label" : "String",
            "multivalued" : "true"
          }
        } ]
      }, {
        "id" : "e5a7eec1-a8b0-41db-b197-b697e7481e07",
        "name" : "acr",
        "description" : "OpenID Connect scope for add acr (authentication context class reference) to the token",
        "protocol" : "openid-connect",
        "attributes" : {
          "include.in.token.scope" : "false",
          "display.on.consent.screen" : "false"
        },
        "protocolMappers" : [ {
          "id" : "42ff9e85-f5c2-4d95-9fb9-9349456f3405",
          "name" : "acr loa level",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-acr-mapper",
          "consentRequired" : false,
          "config" : {
            "id.token.claim" : "true",
            "introspection.token.claim" : "true",
            "access.token.claim" : "true"
          }
        } ]
      }, {
        "id" : "5dfa550c-9305-4441-8452-6e0de9beee5e",
        "name" : "basic",
        "description" : "OpenID Connect scope for add all basic claims to the token",
        "protocol" : "openid-connect",
        "attributes" : {
          "include.in.token.scope" : "false",
          "display.on.consent.screen" : "false"
        },
        "protocolMappers" : [ {
          "id" : "50248c7f-2feb-4fb0-b2f7-2e67b4223388",
          "name" : "auth_time",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usersessionmodel-note-mapper",
          "consentRequired" : false,
          "config" : {
            "user.session.note" : "AUTH_TIME",
            "id.token.claim" : "true",
            "introspection.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "auth_time",
            "jsonType.label" : "long"
          }
        }, {
          "id" : "8b408074-a635-41db-a32a-6f36d3c1bb04",
          "name" : "sub",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-sub-mapper",
          "consentRequired" : false,
          "config" : {
            "introspection.token.claim" : "true",
            "access.token.claim" : "true"
          }
        } ]
      }, {
        "id" : "726f355c-62be-4bcd-b5de-38094672d4ca",
        "name" : "microprofile-jwt",
        "description" : "Microprofile - JWT built-in scope",
        "protocol" : "openid-connect",
        "attributes" : {
          "include.in.token.scope" : "true",
          "display.on.consent.screen" : "false"
        },
        "protocolMappers" : [ {
          "id" : "40878a1d-6242-48ce-b097-c11c3157be65",
          "name" : "groups",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-realm-role-mapper",
          "consentRequired" : false,
          "config" : {
            "introspection.token.claim" : "true",
            "multivalued" : "true",
            "user.attribute" : "foo",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "groups",
            "jsonType.label" : "String"
          }
        }, {
          "id" : "2edd893a-e16b-421b-b660-44bdd0c1d406",
          "name" : "upn",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-attribute-mapper",
          "consentRequired" : false,
          "config" : {
            "introspection.token.claim" : "true",
            "userinfo.token.claim" : "true",
            "user.attribute" : "username",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "upn",
            "jsonType.label" : "String"
          }
        } ]
      }, {
        "id" : "7ccba315-3883-4901-a950-867370be97db",
        "name" : "profile",
        "description" : "OpenID Connect built-in scope: profile",
        "protocol" : "openid-connect",
        "attributes" : {
          "include.in.token.scope" : "true",
          "consent.screen.text" : "${profileScopeConsentText}",
          "display.on.consent.screen" : "true"
        },
        "protocolMappers" : [ {
          "id" : "2b800529-4c0e-416e-82e1-41eeaac534a4",
          "name" : "nickname",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-attribute-mapper",
          "consentRequired" : false,
          "config" : {
            "introspection.token.claim" : "true",
            "userinfo.token.claim" : "true",
            "user.attribute" : "nickname",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "nickname",
            "jsonType.label" : "String"
          }
        }, {
          "id" : "b7e1bb67-6623-41da-877a-a9ff74893514",
          "name" : "picture",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-attribute-mapper",
          "consentRequired" : false,
          "config" : {
            "introspection.token.claim" : "true",
            "userinfo.token.claim" : "true",
            "user.attribute" : "picture",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "picture",
            "jsonType.label" : "String"
          }
        }, {
          "id" : "311d171f-2c63-41fe-81be-9be8de84036c",
          "name" : "username",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-attribute-mapper",
          "consentRequired" : false,
          "config" : {
            "introspection.token.claim" : "true",
            "userinfo.token.claim" : "true",
            "user.attribute" : "username",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "preferred_username",
            "jsonType.label" : "String"
          }
        }, {
          "id" : "7da052cf-51a2-405c-9232-52b21ebcbfe9",
          "name" : "family name",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-attribute-mapper",
          "consentRequired" : false,
          "config" : {
            "introspection.token.claim" : "true",
            "userinfo.token.claim" : "true",
            "user.attribute" : "lastName",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "family_name",
            "jsonType.label" : "String"
          }
        }, {
          "id" : "19d0e7d6-cbbc-4be5-b97b-bfdd2d76e0be",
          "name" : "given name",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-attribute-mapper",
          "consentRequired" : false,
          "config" : {
            "introspection.token.claim" : "true",
            "userinfo.token.claim" : "true",
            "user.attribute" : "firstName",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "given_name",
            "jsonType.label" : "String"
          }
        }, {
          "id" : "673894a3-ef26-49e9-b0d6-07b3aca7fd2f",
          "name" : "locale",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-attribute-mapper",
          "consentRequired" : false,
          "config" : {
            "introspection.token.claim" : "true",
            "userinfo.token.claim" : "true",
            "user.attribute" : "locale",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "locale",
            "jsonType.label" : "String"
          }
        }, {
          "id" : "57b34768-1cb9-46a6-af4b-53f9c2f4a34b",
          "name" : "gender",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-attribute-mapper",
          "consentRequired" : false,
          "config" : {
            "introspection.token.claim" : "true",
            "userinfo.token.claim" : "true",
            "user.attribute" : "gender",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "gender",
            "jsonType.label" : "String"
          }
        }, {
          "id" : "44d8aba5-0dd1-4b24-88a5-a00005bef331",
          "name" : "full name",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-full-name-mapper",
          "consentRequired" : false,
          "config" : {
            "id.token.claim" : "true",
            "introspection.token.claim" : "true",
            "access.token.claim" : "true",
            "userinfo.token.claim" : "true"
          }
        }, {
          "id" : "5c29e6f1-76f6-4b6f-9a12-1769ef6a4946",
          "name" : "middle name",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-attribute-mapper",
          "consentRequired" : false,
          "config" : {
            "introspection.token.claim" : "true",
            "userinfo.token.claim" : "true",
            "user.attribute" : "middleName",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "middle_name",
            "jsonType.label" : "String"
          }
        }, {
          "id" : "dec0411c-775f-4173-9b23-54dc79ff7ce4",
          "name" : "zoneinfo",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-attribute-mapper",
          "consentRequired" : false,
          "config" : {
            "introspection.token.claim" : "true",
            "userinfo.token.claim" : "true",
            "user.attribute" : "zoneinfo",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "zoneinfo",
            "jsonType.label" : "String"
          }
        }, {
          "id" : "0fb0db55-4914-49c0-8722-3967477a8132",
          "name" : "website",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-attribute-mapper",
          "consentRequired" : false,
          "config" : {
            "introspection.token.claim" : "true",
            "userinfo.token.claim" : "true",
            "user.attribute" : "website",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "website",
            "jsonType.label" : "String"
          }
        }, {
          "id" : "d797228b-8b9e-4aa7-b536-b4b3b1508896",
          "name" : "updated at",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-attribute-mapper",
          "consentRequired" : false,
          "config" : {
            "introspection.token.claim" : "true",
            "userinfo.token.claim" : "true",
            "user.attribute" : "updatedAt",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "updated_at",
            "jsonType.label" : "long"
          }
        }, {
          "id" : "8b554caa-8747-4b23-8f20-cddbffcd9af9",
          "name" : "profile",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-attribute-mapper",
          "consentRequired" : false,
          "config" : {
            "introspection.token.claim" : "true",
            "userinfo.token.claim" : "true",
            "user.attribute" : "profile",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "profile",
            "jsonType.label" : "String"
          }
        }, {
          "id" : "c3231518-a987-46ff-bcda-48872d977c23",
          "name" : "birthdate",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-attribute-mapper",
          "consentRequired" : false,
          "config" : {
            "introspection.token.claim" : "true",
            "userinfo.token.claim" : "true",
            "user.attribute" : "birthdate",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "birthdate",
            "jsonType.label" : "String"
          }
        } ]
      }, {
        "id" : "f5d17d6e-e51a-4cfa-b6ef-9bae8714a7f5",
        "name" : "web-origins",
        "description" : "OpenID Connect scope for add allowed web origins to the access token",
        "protocol" : "openid-connect",
        "attributes" : {
          "include.in.token.scope" : "false",
          "consent.screen.text" : "",
          "display.on.consent.screen" : "false"
        },
        "protocolMappers" : [ {
          "id" : "bc66a569-3197-48cd-9faf-172f6f551929",
          "name" : "allowed web origins",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-allowed-origins-mapper",
          "consentRequired" : false,
          "config" : {
            "introspection.token.claim" : "true",
            "access.token.claim" : "true"
          }
        } ]
      }, {
        "id" : "3bca3492-429c-47f1-aa80-f5954ab5d52e",
        "name" : "organization",
        "description" : "Additional claims about the organization a subject belongs to",
        "protocol" : "openid-connect",
        "attributes" : {
          "include.in.token.scope" : "true",
          "consent.screen.text" : "${organizationScopeConsentText}",
          "display.on.consent.screen" : "true"
        },
        "protocolMappers" : [ {
          "id" : "2ca5a3a3-6d3f-4dab-8f22-ad68ea82654d",
          "name" : "organization",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-organization-membership-mapper",
          "consentRequired" : false,
          "config" : {
            "id.token.claim" : "true",
            "introspection.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "organization",
            "jsonType.label" : "String",
            "multivalued" : "true"
          }
        } ]
      }, {
        "id" : "79a3b77f-6a7c-4bf8-ac0a-e45dcc5211f9",
        "name" : "offline_access",
        "description" : "OpenID Connect built-in scope: offline_access",
        "protocol" : "openid-connect",
        "attributes" : {
          "consent.screen.text" : "${offlineAccessScopeConsentText}",
          "display.on.consent.screen" : "true"
        }
      } ],
      "defaultDefaultClientScopes" : [ "role_list", "saml_organization", "profile", "email", "roles", "web-origins", "acr", "basic" ],
      "defaultOptionalClientScopes" : [ "offline_access", "address", "phone", "microprofile-jwt", "organization" ],
      "browserSecurityHeaders" : {
        "contentSecurityPolicyReportOnly" : "",
        "xContentTypeOptions" : "nosniff",
        "referrerPolicy" : "no-referrer",
        "xRobotsTag" : "none",
        "xFrameOptions" : "SAMEORIGIN",
        "contentSecurityPolicy" : "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
        "strictTransportSecurity" : "max-age=31536000; includeSubDomains"
      },
      "smtpServer" : { },
      "eventsEnabled" : false,
      "eventsListeners" : [ "jboss-logging" ],
      "enabledEventTypes" : [ ],
      "adminEventsEnabled" : false,
      "adminEventsDetailsEnabled" : false,
      "identityProviders" : [ ],
      "identityProviderMappers" : [ ],
      "components" : {
        "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy" : [ {
          "id" : "4ea1059f-bd18-4c33-81ca-00b6b21de057",
          "name" : "Allowed Client Scopes",
          "providerId" : "allowed-client-templates",
          "subType" : "authenticated",
          "subComponents" : { },
          "config" : {
            "allow-default-scopes" : [ "true" ]
          }
        }, {
          "id" : "9809e198-115c-4657-8a2c-d8609eb3354e",
          "name" : "Allowed Protocol Mapper Types",
          "providerId" : "allowed-protocol-mappers",
          "subType" : "authenticated",
          "subComponents" : { },
          "config" : {
            "allowed-protocol-mapper-types" : [ "oidc-usermodel-attribute-mapper", "saml-role-list-mapper", "oidc-full-name-mapper", "saml-user-property-mapper", "saml-user-attribute-mapper", "oidc-sha256-pairwise-sub-mapper", "oidc-usermodel-property-mapper", "oidc-address-mapper" ]
          }
        }, {
          "id" : "b51f4808-b83b-46b7-a1e5-0d66e96ae92b",
          "name" : "Consent Required",
          "providerId" : "consent-required",
          "subType" : "anonymous",
          "subComponents" : { },
          "config" : { }
        }, {
          "id" : "1a9865c4-6ff4-492b-800d-437849c2ea73",
          "name" : "Full Scope Disabled",
          "providerId" : "scope",
          "subType" : "anonymous",
          "subComponents" : { },
          "config" : { }
        }, {
          "id" : "cb3c9f55-77bd-41c2-b3a2-8c42f7e916c5",
          "name" : "Allowed Protocol Mapper Types",
          "providerId" : "allowed-protocol-mappers",
          "subType" : "anonymous",
          "subComponents" : { },
          "config" : {
            "allowed-protocol-mapper-types" : [ "oidc-usermodel-property-mapper", "oidc-sha256-pairwise-sub-mapper", "saml-user-attribute-mapper", "saml-user-property-mapper", "saml-role-list-mapper", "oidc-usermodel-attribute-mapper", "oidc-full-name-mapper", "oidc-address-mapper" ]
          }
        }, {
          "id" : "9e6f3143-42c0-4568-8fe9-e639a3726fcb",
          "name" : "Allowed Client Scopes",
          "providerId" : "allowed-client-templates",
          "subType" : "anonymous",
          "subComponents" : { },
          "config" : {
            "allow-default-scopes" : [ "true" ]
          }
        }, {
          "id" : "9746ac59-3456-49cf-b8c5-48b4d94d1c9e",
          "name" : "Trusted Hosts",
          "providerId" : "trusted-hosts",
          "subType" : "anonymous",
          "subComponents" : { },
          "config" : {
            "host-sending-registration-request-must-match" : [ "true" ],
            "client-uris-must-match" : [ "true" ]
          }
        }, {
          "id" : "9ab23e88-0766-434f-8374-6505e6d8d01a",
          "name" : "Max Clients Limit",
          "providerId" : "max-clients",
          "subType" : "anonymous",
          "subComponents" : { },
          "config" : {
            "max-clients" : [ "200" ]
          }
        } ],
        "org.keycloak.keys.KeyProvider" : [ {
          "id" : "559f3f3d-e4dc-40c8-a0c6-33bd8a982185",
          "name" : "rsa-generated",
          "providerId" : "rsa-generated",
          "subComponents" : { },
          "config" : {
            "privateKey" : [ "MIIEowIBAAKCAQEAvIj1JU7ATYI//pqi3tkQYxe+PbmPEkPsQRS31vg3PReKF5OFtiOl8vyaeOwfFEgfTBcp8EYeaZRuSL+sTzbLPzjfB9ZrugsIfxNUoBwLLS67SPFEDs86KRh79XoQgooECQ+zwkUbRsm2iiPc2iBDlmyoadN5vQQSszox5Ay4yUxvHJCiCrJC97TGjZn9tVqnirNqA+poGu7nZcJgy8wObVorrZzRXWPDhTjwvZ3XJ1fVzVGTvTf/+fS3w1vLv8BMp/m0UlineUcc/0baM6CI/Ew9JU13gPmXicohcGcaKuoTcIZotjCoObd/KrsjJ+/82+tcek6IWXsB/qJTkPO/ZwIDAQABAoIBAAlIXzxCPAj/mU5cNagKlfa+ncATJ9IXLylC74yDR3s0OZy0OU+2Jdevr5y1rUi7IwIE3CyJYfMQnp+wygzE2xvhObynKeywS++TIjDCJg3WdDH5xU5nlWOeKRtnJCvZOOVrimN4auxkVJCeor+r+eRiCW2isHwbbgJ/980brJQmZuOSuteYOol0o8wrQpxJU4fmM0acOIp2oO3za7mXqG6cZYtil7bMtlgolBmH9hJeFySxDCl/lJZE4crhan4Slku99QNLYd0stGejFy5DXcAydfNZo5mA2fOxoYp0vU1I55ZJdGL/1M4vtkuHjfhKMxQ1tFTpmicjQIdreUcFJukCgYEA+vnXBy/rV0KTv7jO5cMkTz7fsyLeleyo+i/Ky/zeYM/+Xh/fyYR4XsyWgiiWoGoxKFLMf1mfBP7AHvLJ7HBLqsi6rDcokK/T6giAhVC7kF2R+BQhWenh7gpNFYZXKxsMTNuJHuvhF1GO4Er8iDMMmjJwrszol8DgSAn1MznhfqUCgYEAwE8hboYnsQhdcW4XsmNHsuFRTGGIAVufUOhvz126wFNTPW0TiM7T30C8wEWiZDmrYlINVnoPshnYSfSx/dDmPSRYdM/d1NK/uKUHLmgb97Yh80udJ+kFCO5ss8qa8y09Uv3gk6tIKwLu57G3EGLp+e6tb+DiPtnZJ7QhuLbklBsCgYBMV3j3/7SHi4Hj3LRaoXxG+qoTFHU+h4ly6Ny4JggCzOHkAbAR3VC8DWFu4CfJTeP8DwuTZVCAtXj9MP8JA7OQlJRr1C9rq4A7fTCS3Nbg+AVxv7XRYtpNjSabeIzFWOnp6xGPrVJ/xFhAk66zQ0v/D37FPSE3H/1ZDGZgmaek3QKBgGArsmZZRKQtsL029zbIm2SDdWqjI6a6MRP/CVtEXk4r3WbMk4ZJGH9/GmV07V790A1dRzpF1G+WqSli61gpDdrpwCq6gQ8bTbGDJfI5MjNQq+3FlJQO3eu3gDjxS0ftCcvlFlgCwhZwYxUPNKNHNAc/KxDV/4661vQaCvsay3idAoGBAL4SD9xV5q0KG4ZvesG5yg+fL+G6lypst5LF23hOv1QQHiZ8LF0OFOmLw+mt3Ga0B3USp6Oc/twQzNkY/7kqQWZQ2rYYd7Hk6gfQipFbpVzvFGHdysuA1Mat91yyFF4UFigvyQo72S2TZp6bK5edzqqpIfaLwKiZbojl6U84b/+m" ],
            "keyUse" : [ "SIG" ],
            "certificate" : [ "MIICqzCCAZMCBgGX35uJ6jANBgkqhkiG9w0BAQsFADAZMRcwFQYDVQQDDA5hdXRoZW50aWNhdGlvbjAeFw0yNTA3MDYxMTU4MjJaFw0zNTA3MDYxMjAwMDJaMBkxFzAVBgNVBAMMDmF1dGhlbnRpY2F0aW9uMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAvIj1JU7ATYI//pqi3tkQYxe+PbmPEkPsQRS31vg3PReKF5OFtiOl8vyaeOwfFEgfTBcp8EYeaZRuSL+sTzbLPzjfB9ZrugsIfxNUoBwLLS67SPFEDs86KRh79XoQgooECQ+zwkUbRsm2iiPc2iBDlmyoadN5vQQSszox5Ay4yUxvHJCiCrJC97TGjZn9tVqnirNqA+poGu7nZcJgy8wObVorrZzRXWPDhTjwvZ3XJ1fVzVGTvTf/+fS3w1vLv8BMp/m0UlineUcc/0baM6CI/Ew9JU13gPmXicohcGcaKuoTcIZotjCoObd/KrsjJ+/82+tcek6IWXsB/qJTkPO/ZwIDAQABMA0GCSqGSIb3DQEBCwUAA4IBAQCTHzoHucURLeV06R+lfiZADTnKSuf8RY+HI41MEjaa9AWUhMTNPT362p3nJJ5x/Db/kxZr3zxg1TsqtGyUeieSD8f39paNNSrCqMuuQa+zUlNDLoIDSkfkllDo3BlSu9zkcCF0G7Dh7k1UMpIfUtpOKocCEFi/oU5hJH8OcejNqsRFzPaPcjiwdnEN5eY9TnpUKZMcuu5SiX9hgMxi5kfzuM6XJkwWU2UeUlNeJOKFCsIGgSNMQteyAUfu1X3BTQwLxySaCRiWi5ucZ3iF/dEwTpXykjidp3XBtWF9GllS3B+frjKdyr9Hz9nhfprGDCics58uPoYd9IwED3UmQsEc" ],
            "priority" : [ "100" ]
          }
        }, {
          "id" : "2743685f-36eb-4e84-981e-62c1cdeb781f",
          "name" : "rsa-enc-generated",
          "providerId" : "rsa-enc-generated",
          "subComponents" : { },
          "config" : {
            "privateKey" : [ "MIIEpAIBAAKCAQEApBAE5GEbud9dCCpux5CQlXzNtsZOHMM3YpB4tftgQKaxGGd96ZlJsFhNBVmh+SlOtBH8md+lzndmpmVeX3NzF2BThXY0Ku9JN0B2UBdgUu2unSznfnOG8hmyIC2U0xkemRb7e+4rCIcU04qGT9Tr5yL/kqGtNKullPfceZzAPxBr7rYLMs8dIKc0zKFTZX4GtFhSA5Ro+Vse4hJ0Wqy6iEX2qvnu58OxED0FtN5lhhnH9sfJfS+/aifpDEzeVqlOBsgZPYBBRhXf+MjNDfIDC3q01vre8XcReRitSM9hMO7ZCUxG2am6t2NXsk6v5TpLa7R4VxUUjzl/k60iLA8YLwIDAQABAoIBAESV882bsREXyRcgUhZ4n5D2zzMBHOeWTsGUPvpo/7iXVwKqRS+SZwVjLLO3YGi+tYm+2ThkkDbLoKygRP8nTu5vVQs+uplWVmfUOYHK+/g/J9fKTW6GElyElHwyQfysDCgYvQJ2syPKANFcoECgdQw4C9q7XyLdPQgVRGTMvGvAIDTo9peZp6uQRq7y/Rb+Q6uPrtKp9EFlakLpmJ2j0EfOBi6IUgZ8Rpr/F5qoktBdqTduW36IWeeOWsVSmMo1wsx5DyvCEPT6JJWJS2V3iBBohvV02o2rbJ7nbwNcSTNvvwRaFfktnAsuo2/vtO5ZMJNaDLY3Jv5kOVCTcAaCPekCgYEA37G/bpDTwqxKBjBRPsBAq2xY2yXcqMpf329gaKOonaFWrhiHrYPAUUYZpq3lIGnzs4fGPXgo7NiHq8A+g7ok2QYm53migVvYVb5YW9hpgZZwrHy1TSk5TsSvbAM9HCWWurV/UkZpcBY3h7Z9m1Gu4O00FDNWc6rat/4S/7sc+SkCgYEAu8Gc2EULgHRHyD2+/0ypIxtzwB6Bg8MxbVU8RlYhL+8+Ru+0CTxMeIZrwyPrZP3x3E3IdgLVD+TTkTQtzfWOHSh5NKw6gmiDXwQB4rdycvcf1oDC1+FK4aJ7/YQp2dDr/umEal3pHYh5NP2fmKIoSEuGTPRzoKh23vldX/BOOZcCgYEAouy+ZhRb990uqSVF93NlZrWqXitMdS+49m8ThAM3S1/4VyMMpwdf6pIpGqprSNmCo08PxzOecyseXazOm3jXX65IZa3E+3zeq0zQ5ExSRA1DkY3fKw0MbV95+Sy+tKJ4DxMkYdNg9j9oQJNdFuQ+gBqkJNZjcCmP1hTa16H770kCgYBGee5936zpkrw/Fa5T9lqmqu9P9iN3ahVrjMsLO9lJPOyLg/54WQH7W7mnjhwV1JysrSXJ5lZDmQkxP/zRipLFryOP+fYcbU6io8Zxa5qyPMDeq4Z3skGBYJRaHPn4oMt07AKgSo/uXgPhODJoALZOLMtEp52feJzmJYQ/NtymEQKBgQC2gyYBNg7Qv91WYrwb8zcI7DxeLSB4q18qZDOunn+WnvKg5NOJaHP1JqciPpadW8t37uZ47Tmfd2DNyBWpq/ztYaHPAAnuMtnrgsjFB8d0EXTtnay2bl+b+SpoG7iGQAhY+WAmBF/50yTNdZFYiM93kl9JP8PQZP3E5FK2ENpGUA==" ],
            "keyUse" : [ "ENC" ],
            "certificate" : [ "MIICqzCCAZMCBgGX35uKFDANBgkqhkiG9w0BAQsFADAZMRcwFQYDVQQDDA5hdXRoZW50aWNhdGlvbjAeFw0yNTA3MDYxMTU4MjJaFw0zNTA3MDYxMjAwMDJaMBkxFzAVBgNVBAMMDmF1dGhlbnRpY2F0aW9uMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEApBAE5GEbud9dCCpux5CQlXzNtsZOHMM3YpB4tftgQKaxGGd96ZlJsFhNBVmh+SlOtBH8md+lzndmpmVeX3NzF2BThXY0Ku9JN0B2UBdgUu2unSznfnOG8hmyIC2U0xkemRb7e+4rCIcU04qGT9Tr5yL/kqGtNKullPfceZzAPxBr7rYLMs8dIKc0zKFTZX4GtFhSA5Ro+Vse4hJ0Wqy6iEX2qvnu58OxED0FtN5lhhnH9sfJfS+/aifpDEzeVqlOBsgZPYBBRhXf+MjNDfIDC3q01vre8XcReRitSM9hMO7ZCUxG2am6t2NXsk6v5TpLa7R4VxUUjzl/k60iLA8YLwIDAQABMA0GCSqGSIb3DQEBCwUAA4IBAQAqNkewm3GeFifYaJYlu1DfVl3iyNIt1ys1S2TiCSfUIy0dnUCwm/uJTsUcDlo5KEGspF4AWeV1JysPB/qMbB3c8wowJIF3nznpWzOwDk93gL2lA/Ju/bLRCi2bmGrgg1Q6yjsmJjWzY7O0r2Z2dOE3bn7zrzmCA9thgfoZMj7TBktZI8mcZwXQbxjArzCy/5fSeRwjQ9Jg09RPZpDIOhsZa60GktO852jj9o0YUY5Hd9/UwftgRwH6BnIPfT/caTks684aYlQBbA6AVdFQ/Xw9JXk+e3a4uuAV83UPXtfCLyK7I9acbQSWaeRgVcraJY/TYd6/vdeX6MnSy9sqIngN" ],
            "priority" : [ "100" ],
            "algorithm" : [ "RSA-OAEP" ]
          }
        }, {
          "id" : "e516886c-eecc-472f-89b5-d5c162c5dba1",
          "name" : "hmac-generated-hs512",
          "providerId" : "hmac-generated",
          "subComponents" : { },
          "config" : {
            "kid" : [ "7246384f-bc93-4e6a-ba75-5c44045e4242" ],
            "secret" : [ "3Mfy0GJgqrR7C5JJk_zNIz55yxzo543tdu8lqNPF3q8P-DyY7Bx-vsGttOs9VtQFdIwgt5xTqqYnzVlCRpxOZhlps0tY1Dx_JB7Now81fsB9Yg1IydqAqhb867_HdGaOMdmj9eQb5yjIXLJyj9f8mxRhdAWvbqVfCuAWdeNmpDc" ],
            "priority" : [ "100" ],
            "algorithm" : [ "HS512" ]
          }
        }, {
          "id" : "87026d0a-3fe1-4df8-8032-615ebf6e625c",
          "name" : "aes-generated",
          "providerId" : "aes-generated",
          "subComponents" : { },
          "config" : {
            "kid" : [ "d8ef4c8a-d18e-40f4-9deb-f11929d3dd9d" ],
            "secret" : [ "OHawWkWS-uFSNyVDMm8Ulw" ],
            "priority" : [ "100" ]
          }
        } ]
      },
      "internationalizationEnabled" : false,
      "supportedLocales" : [ ],
      "authenticationFlows" : [ {
        "id" : "98d5ae3d-6849-4b4d-aeb7-7e6dd718b216",
        "alias" : "Account verification options",
        "description" : "Method with which to verity the existing account",
        "providerId" : "basic-flow",
        "topLevel" : false,
        "builtIn" : true,
        "authenticationExecutions" : [ {
          "authenticator" : "idp-email-verification",
          "authenticatorFlow" : false,
          "requirement" : "ALTERNATIVE",
          "priority" : 10,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        }, {
          "authenticatorFlow" : true,
          "requirement" : "ALTERNATIVE",
          "priority" : 20,
          "autheticatorFlow" : true,
          "flowAlias" : "Verify Existing Account by Re-authentication",
          "userSetupAllowed" : false
        } ]
      }, {
        "id" : "bc045ef5-9bb5-48b9-b63d-5b4a1a437c2a",
        "alias" : "Browser - Conditional OTP",
        "description" : "Flow to determine if the OTP is required for the authentication",
        "providerId" : "basic-flow",
        "topLevel" : false,
        "builtIn" : true,
        "authenticationExecutions" : [ {
          "authenticator" : "conditional-user-configured",
          "authenticatorFlow" : false,
          "requirement" : "REQUIRED",
          "priority" : 10,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        }, {
          "authenticator" : "auth-otp-form",
          "authenticatorFlow" : false,
          "requirement" : "REQUIRED",
          "priority" : 20,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        } ]
      }, {
        "id" : "55b27839-afce-4b8f-aa27-0231da6db44e",
        "alias" : "Browser - Conditional Organization",
        "description" : "Flow to determine if the organization identity-first login is to be used",
        "providerId" : "basic-flow",
        "topLevel" : false,
        "builtIn" : true,
        "authenticationExecutions" : [ {
          "authenticator" : "conditional-user-configured",
          "authenticatorFlow" : false,
          "requirement" : "REQUIRED",
          "priority" : 10,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        }, {
          "authenticator" : "organization",
          "authenticatorFlow" : false,
          "requirement" : "ALTERNATIVE",
          "priority" : 20,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        } ]
      }, {
        "id" : "f9a75fae-b927-446b-8232-684794a2ec10",
        "alias" : "Direct Grant - Conditional OTP",
        "description" : "Flow to determine if the OTP is required for the authentication",
        "providerId" : "basic-flow",
        "topLevel" : false,
        "builtIn" : true,
        "authenticationExecutions" : [ {
          "authenticator" : "conditional-user-configured",
          "authenticatorFlow" : false,
          "requirement" : "REQUIRED",
          "priority" : 10,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        }, {
          "authenticator" : "direct-grant-validate-otp",
          "authenticatorFlow" : false,
          "requirement" : "REQUIRED",
          "priority" : 20,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        } ]
      }, {
        "id" : "cb0ed44f-061b-4426-b88c-b1ec50e70487",
        "alias" : "First Broker Login - Conditional Organization",
        "description" : "Flow to determine if the authenticator that adds organization members is to be used",
        "providerId" : "basic-flow",
        "topLevel" : false,
        "builtIn" : true,
        "authenticationExecutions" : [ {
          "authenticator" : "conditional-user-configured",
          "authenticatorFlow" : false,
          "requirement" : "REQUIRED",
          "priority" : 10,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        }, {
          "authenticator" : "idp-add-organization-member",
          "authenticatorFlow" : false,
          "requirement" : "REQUIRED",
          "priority" : 20,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        } ]
      }, {
        "id" : "ad387936-ce39-468d-a382-11b569d7936b",
        "alias" : "First broker login - Conditional OTP",
        "description" : "Flow to determine if the OTP is required for the authentication",
        "providerId" : "basic-flow",
        "topLevel" : false,
        "builtIn" : true,
        "authenticationExecutions" : [ {
          "authenticator" : "conditional-user-configured",
          "authenticatorFlow" : false,
          "requirement" : "REQUIRED",
          "priority" : 10,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        }, {
          "authenticator" : "auth-otp-form",
          "authenticatorFlow" : false,
          "requirement" : "REQUIRED",
          "priority" : 20,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        } ]
      }, {
        "id" : "9741e9f7-b8a1-4b3a-a692-9033c5e51d26",
        "alias" : "Handle Existing Account",
        "description" : "Handle what to do if there is existing account with same email/username like authenticated identity provider",
        "providerId" : "basic-flow",
        "topLevel" : false,
        "builtIn" : true,
        "authenticationExecutions" : [ {
          "authenticator" : "idp-confirm-link",
          "authenticatorFlow" : false,
          "requirement" : "REQUIRED",
          "priority" : 10,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        }, {
          "authenticatorFlow" : true,
          "requirement" : "REQUIRED",
          "priority" : 20,
          "autheticatorFlow" : true,
          "flowAlias" : "Account verification options",
          "userSetupAllowed" : false
        } ]
      }, {
        "id" : "9a589480-0a3c-46a4-96a9-9105b5c45830",
        "alias" : "Organization",
        "providerId" : "basic-flow",
        "topLevel" : false,
        "builtIn" : true,
        "authenticationExecutions" : [ {
          "authenticatorFlow" : true,
          "requirement" : "CONDITIONAL",
          "priority" : 10,
          "autheticatorFlow" : true,
          "flowAlias" : "Browser - Conditional Organization",
          "userSetupAllowed" : false
        } ]
      }, {
        "id" : "4dbd9256-3cd4-4ac5-a2f6-b1479a0ae77a",
        "alias" : "Reset - Conditional OTP",
        "description" : "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
        "providerId" : "basic-flow",
        "topLevel" : false,
        "builtIn" : true,
        "authenticationExecutions" : [ {
          "authenticator" : "conditional-user-configured",
          "authenticatorFlow" : false,
          "requirement" : "REQUIRED",
          "priority" : 10,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        }, {
          "authenticator" : "reset-otp",
          "authenticatorFlow" : false,
          "requirement" : "REQUIRED",
          "priority" : 20,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        } ]
      }, {
        "id" : "7f2a94d8-0023-4d13-8460-53603ce1aee1",
        "alias" : "User creation or linking",
        "description" : "Flow for the existing/non-existing user alternatives",
        "providerId" : "basic-flow",
        "topLevel" : false,
        "builtIn" : true,
        "authenticationExecutions" : [ {
          "authenticatorConfig" : "create unique user config",
          "authenticator" : "idp-create-user-if-unique",
          "authenticatorFlow" : false,
          "requirement" : "ALTERNATIVE",
          "priority" : 10,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        }, {
          "authenticatorFlow" : true,
          "requirement" : "ALTERNATIVE",
          "priority" : 20,
          "autheticatorFlow" : true,
          "flowAlias" : "Handle Existing Account",
          "userSetupAllowed" : false
        } ]
      }, {
        "id" : "f6fa05a1-822b-429f-ad6a-668dbcd62ebf",
        "alias" : "Verify Existing Account by Re-authentication",
        "description" : "Reauthentication of existing account",
        "providerId" : "basic-flow",
        "topLevel" : false,
        "builtIn" : true,
        "authenticationExecutions" : [ {
          "authenticator" : "idp-username-password-form",
          "authenticatorFlow" : false,
          "requirement" : "REQUIRED",
          "priority" : 10,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        }, {
          "authenticatorFlow" : true,
          "requirement" : "CONDITIONAL",
          "priority" : 20,
          "autheticatorFlow" : true,
          "flowAlias" : "First broker login - Conditional OTP",
          "userSetupAllowed" : false
        } ]
      }, {
        "id" : "9a14f6a7-9a77-4665-9ce9-ddf4cd0f6fe4",
        "alias" : "browser",
        "description" : "Browser based authentication",
        "providerId" : "basic-flow",
        "topLevel" : true,
        "builtIn" : true,
        "authenticationExecutions" : [ {
          "authenticator" : "auth-cookie",
          "authenticatorFlow" : false,
          "requirement" : "ALTERNATIVE",
          "priority" : 10,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        }, {
          "authenticator" : "auth-spnego",
          "authenticatorFlow" : false,
          "requirement" : "DISABLED",
          "priority" : 20,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        }, {
          "authenticator" : "identity-provider-redirector",
          "authenticatorFlow" : false,
          "requirement" : "ALTERNATIVE",
          "priority" : 25,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        }, {
          "authenticatorFlow" : true,
          "requirement" : "ALTERNATIVE",
          "priority" : 26,
          "autheticatorFlow" : true,
          "flowAlias" : "Organization",
          "userSetupAllowed" : false
        }, {
          "authenticatorFlow" : true,
          "requirement" : "ALTERNATIVE",
          "priority" : 30,
          "autheticatorFlow" : true,
          "flowAlias" : "forms",
          "userSetupAllowed" : false
        } ]
      }, {
        "id" : "48d691bc-28a8-4c14-836b-a24811d7bed6",
        "alias" : "clients",
        "description" : "Base authentication for clients",
        "providerId" : "client-flow",
        "topLevel" : true,
        "builtIn" : true,
        "authenticationExecutions" : [ {
          "authenticator" : "client-secret",
          "authenticatorFlow" : false,
          "requirement" : "ALTERNATIVE",
          "priority" : 10,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        }, {
          "authenticator" : "client-jwt",
          "authenticatorFlow" : false,
          "requirement" : "ALTERNATIVE",
          "priority" : 20,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        }, {
          "authenticator" : "client-secret-jwt",
          "authenticatorFlow" : false,
          "requirement" : "ALTERNATIVE",
          "priority" : 30,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        }, {
          "authenticator" : "client-x509",
          "authenticatorFlow" : false,
          "requirement" : "ALTERNATIVE",
          "priority" : 40,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        } ]
      }, {
        "id" : "e5c21ada-6805-491d-a913-09ef14773483",
        "alias" : "direct grant",
        "description" : "OpenID Connect Resource Owner Grant",
        "providerId" : "basic-flow",
        "topLevel" : true,
        "builtIn" : true,
        "authenticationExecutions" : [ {
          "authenticator" : "direct-grant-validate-username",
          "authenticatorFlow" : false,
          "requirement" : "REQUIRED",
          "priority" : 10,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        }, {
          "authenticator" : "direct-grant-validate-password",
          "authenticatorFlow" : false,
          "requirement" : "REQUIRED",
          "priority" : 20,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        }, {
          "authenticatorFlow" : true,
          "requirement" : "CONDITIONAL",
          "priority" : 30,
          "autheticatorFlow" : true,
          "flowAlias" : "Direct Grant - Conditional OTP",
          "userSetupAllowed" : false
        } ]
      }, {
        "id" : "284cce5a-9817-41e5-93dc-d6a241dc90e8",
        "alias" : "docker auth",
        "description" : "Used by Docker clients to authenticate against the IDP",
        "providerId" : "basic-flow",
        "topLevel" : true,
        "builtIn" : true,
        "authenticationExecutions" : [ {
          "authenticator" : "docker-http-basic-authenticator",
          "authenticatorFlow" : false,
          "requirement" : "REQUIRED",
          "priority" : 10,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        } ]
      }, {
        "id" : "bc7623f8-e475-42ed-852a-d3750d23dfa6",
        "alias" : "first broker login",
        "description" : "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
        "providerId" : "basic-flow",
        "topLevel" : true,
        "builtIn" : true,
        "authenticationExecutions" : [ {
          "authenticatorConfig" : "review profile config",
          "authenticator" : "idp-review-profile",
          "authenticatorFlow" : false,
          "requirement" : "REQUIRED",
          "priority" : 10,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        }, {
          "authenticatorFlow" : true,
          "requirement" : "REQUIRED",
          "priority" : 20,
          "autheticatorFlow" : true,
          "flowAlias" : "User creation or linking",
          "userSetupAllowed" : false
        }, {
          "authenticatorFlow" : true,
          "requirement" : "CONDITIONAL",
          "priority" : 50,
          "autheticatorFlow" : true,
          "flowAlias" : "First Broker Login - Conditional Organization",
          "userSetupAllowed" : false
        } ]
      }, {
        "id" : "f6500f1b-7c89-4bad-8db5-5455f30bc0aa",
        "alias" : "forms",
        "description" : "Username, password, otp and other auth forms.",
        "providerId" : "basic-flow",
        "topLevel" : false,
        "builtIn" : true,
        "authenticationExecutions" : [ {
          "authenticator" : "auth-username-password-form",
          "authenticatorFlow" : false,
          "requirement" : "REQUIRED",
          "priority" : 10,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        }, {
          "authenticatorFlow" : true,
          "requirement" : "CONDITIONAL",
          "priority" : 20,
          "autheticatorFlow" : true,
          "flowAlias" : "Browser - Conditional OTP",
          "userSetupAllowed" : false
        } ]
      }, {
        "id" : "bd6ee049-e5bc-407c-bd75-8098c5cca500",
        "alias" : "registration",
        "description" : "Registration flow",
        "providerId" : "basic-flow",
        "topLevel" : true,
        "builtIn" : true,
        "authenticationExecutions" : [ {
          "authenticator" : "registration-page-form",
          "authenticatorFlow" : true,
          "requirement" : "REQUIRED",
          "priority" : 10,
          "autheticatorFlow" : true,
          "flowAlias" : "registration form",
          "userSetupAllowed" : false
        } ]
      }, {
        "id" : "a8e62980-5888-46eb-b78a-9edc6cc34ce1",
        "alias" : "registration form",
        "description" : "Registration form",
        "providerId" : "form-flow",
        "topLevel" : false,
        "builtIn" : true,
        "authenticationExecutions" : [ {
          "authenticator" : "registration-user-creation",
          "authenticatorFlow" : false,
          "requirement" : "REQUIRED",
          "priority" : 20,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        }, {
          "authenticator" : "registration-password-action",
          "authenticatorFlow" : false,
          "requirement" : "REQUIRED",
          "priority" : 50,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        }, {
          "authenticator" : "registration-recaptcha-action",
          "authenticatorFlow" : false,
          "requirement" : "DISABLED",
          "priority" : 60,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        }, {
          "authenticator" : "registration-terms-and-conditions",
          "authenticatorFlow" : false,
          "requirement" : "DISABLED",
          "priority" : 70,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        } ]
      }, {
        "id" : "1cfabdd8-4b3b-48f2-8f3e-f8df1549b927",
        "alias" : "reset credentials",
        "description" : "Reset credentials for a user if they forgot their password or something",
        "providerId" : "basic-flow",
        "topLevel" : true,
        "builtIn" : true,
        "authenticationExecutions" : [ {
          "authenticator" : "reset-credentials-choose-user",
          "authenticatorFlow" : false,
          "requirement" : "REQUIRED",
          "priority" : 10,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        }, {
          "authenticator" : "reset-credential-email",
          "authenticatorFlow" : false,
          "requirement" : "REQUIRED",
          "priority" : 20,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        }, {
          "authenticator" : "reset-password",
          "authenticatorFlow" : false,
          "requirement" : "REQUIRED",
          "priority" : 30,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        }, {
          "authenticatorFlow" : true,
          "requirement" : "CONDITIONAL",
          "priority" : 40,
          "autheticatorFlow" : true,
          "flowAlias" : "Reset - Conditional OTP",
          "userSetupAllowed" : false
        } ]
      }, {
        "id" : "b188a820-a362-49d3-81b8-91cf3a68f1d7",
        "alias" : "saml ecp",
        "description" : "SAML ECP Profile Authentication Flow",
        "providerId" : "basic-flow",
        "topLevel" : true,
        "builtIn" : true,
        "authenticationExecutions" : [ {
          "authenticator" : "http-basic-authenticator",
          "authenticatorFlow" : false,
          "requirement" : "REQUIRED",
          "priority" : 10,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        } ]
      } ],
      "authenticatorConfig" : [ {
        "id" : "23ce7d29-3fe0-4b7e-9e84-6ee5f508f298",
        "alias" : "create unique user config",
        "config" : {
          "require.password.update.after.registration" : "false"
        }
      }, {
        "id" : "7163e66e-deea-4b27-9366-b17456607457",
        "alias" : "review profile config",
        "config" : {
          "update.profile.on.first.login" : "missing"
        }
      } ],
      "requiredActions" : [ {
        "alias" : "CONFIGURE_TOTP",
        "name" : "Configure OTP",
        "providerId" : "CONFIGURE_TOTP",
        "enabled" : true,
        "defaultAction" : false,
        "priority" : 10,
        "config" : { }
      }, {
        "alias" : "TERMS_AND_CONDITIONS",
        "name" : "Terms and Conditions",
        "providerId" : "TERMS_AND_CONDITIONS",
        "enabled" : false,
        "defaultAction" : false,
        "priority" : 20,
        "config" : { }
      }, {
        "alias" : "UPDATE_PASSWORD",
        "name" : "Update Password",
        "providerId" : "UPDATE_PASSWORD",
        "enabled" : true,
        "defaultAction" : false,
        "priority" : 30,
        "config" : { }
      }, {
        "alias" : "UPDATE_PROFILE",
        "name" : "Update Profile",
        "providerId" : "UPDATE_PROFILE",
        "enabled" : true,
        "defaultAction" : false,
        "priority" : 40,
        "config" : { }
      }, {
        "alias" : "VERIFY_EMAIL",
        "name" : "Verify Email",
        "providerId" : "VERIFY_EMAIL",
        "enabled" : true,
        "defaultAction" : false,
        "priority" : 50,
        "config" : { }
      }, {
        "alias" : "delete_account",
        "name" : "Delete Account",
        "providerId" : "delete_account",
        "enabled" : false,
        "defaultAction" : false,
        "priority" : 60,
        "config" : { }
      }, {
        "alias" : "webauthn-register",
        "name" : "Webauthn Register",
        "providerId" : "webauthn-register",
        "enabled" : true,
        "defaultAction" : false,
        "priority" : 70,
        "config" : { }
      }, {
        "alias" : "webauthn-register-passwordless",
        "name" : "Webauthn Register Passwordless",
        "providerId" : "webauthn-register-passwordless",
        "enabled" : true,
        "defaultAction" : false,
        "priority" : 80,
        "config" : { }
      }, {
        "alias" : "VERIFY_PROFILE",
        "name" : "Verify Profile",
        "providerId" : "VERIFY_PROFILE",
        "enabled" : true,
        "defaultAction" : false,
        "priority" : 90,
        "config" : { }
      }, {
        "alias" : "delete_credential",
        "name" : "Delete Credential",
        "providerId" : "delete_credential",
        "enabled" : true,
        "defaultAction" : false,
        "priority" : 100,
        "config" : { }
      }, {
        "alias" : "update_user_locale",
        "name" : "Update User Locale",
        "providerId" : "update_user_locale",
        "enabled" : true,
        "defaultAction" : false,
        "priority" : 1000,
        "config" : { }
      } ],
      "browserFlow" : "browser",
      "registrationFlow" : "registration",
      "directGrantFlow" : "direct grant",
      "resetCredentialsFlow" : "reset credentials",
      "clientAuthenticationFlow" : "clients",
      "dockerAuthenticationFlow" : "docker auth",
      "firstBrokerLoginFlow" : "first broker login",
      "attributes" : {
        "cibaBackchannelTokenDeliveryMode" : "poll",
        "cibaExpiresIn" : "120",
        "cibaAuthRequestedUserHint" : "login_hint",
        "oauth2DeviceCodeLifespan" : "600",
        "oauth2DevicePollingInterval" : "5",
        "parRequestUriLifespan" : "60",
        "cibaInterval" : "5",
        "realmReusableOtpCode" : "false"
      },
      "keycloakVersion" : "26.2.5",
      "userManagedAccessAllowed" : false,
      "organizationsEnabled" : false,
      "verifiableCredentialsEnabled" : false,
      "adminPermissionsEnabled" : false,
      "clientProfiles" : {
        "profiles" : [ ]
      },
      "clientPolicies" : {
        "policies" : [ ]
      }
    }