pipeline {
    agent any

    environment {
        SONARQUBE_SERVER = 'SonarQube'
        SONAR_TOKEN = credentials('sonar-token-id')
    }

    stages {
        stage('Clone Config Server') {
            steps {
                sh 'jenkins/scripts/clone-config-server.sh'
            }
        }

        stage('Build') {
            steps {
                sh 'jenkins/scripts/build.sh'
            }
        }

        stage('Test') {
            steps {
                sh 'jenkins/scripts/test.sh'
            }
        }

        stage('SonarQube Analysis') {
            steps {
                withCredentials([string(credentialsId: 'sonar-token-id', variable: 'SONAR_TOKEN')]) {
                    withSonarQubeEnv('SonarQube') {
                        sh 'jenkins/scripts/sonarqube.sh'
                    }
                }
            }
        }

        stage('Publish to Nexus') {
            steps {
                sh 'jenkins/scripts/nexus-deploy.sh'
            }
        }

        stage('Deploy with Docker Compose') {
            steps {
                sh 'jenkins/scripts/deploy.sh'
            }
        }
    }

    post {
        always {
            script {
                junit '**/target/surefire-reports/*.xml'
            }
        }
        failure {
            mail to: 'melek@store.com',
                subject: "ðŸš¨ Jenkins Pipeline Failed: ${env.JOB_NAME} #${env.BUILD_NUMBER}",
                body: """\
                            The Jenkins pipeline for ${env.JOB_NAME} has failed.

                            Check details and console output:
                            ${env.BUILD_URL}

                            Action is required.
                            """
        }
    }
}
