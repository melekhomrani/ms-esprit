services:

  authentication-app:
    container_name: authentication-app
    build:
      context: ./authentication
    ports:
      - "5050:5050"
    environment:
      KEYCLOAK_SERVER_URL: http://keycloak:8080
      KEYCLOAK_REALM: authentication
      KEYCLOAK_CLIENT_ID: store-app
      KEYCLOAK_CLIENT_SECRET: k7YIkMsWSA8UhokbJxgnxrEurO35FpZe
      KEYCLOAK_USERNAME: admin
      KEYCLOAK_PASSWORD: admin
      PORT: 5050
    restart: on-failure
    depends_on:
      - keycloak
    networks:
      store-network:
        aliases:
          - authentication-app

  config-server:
    container_name: config-server
    build:
      context: ./config-server
    ports:
      - "8888:8888"
    networks:
      store-network:
        aliases:
          - config-server

  eureka-server:
    container_name: eureka-server
    build:
      context: ./eureka-server
    ports:
      - "8761:8761"
    environment:
      - SPRING_PROFILES_ACTIVE=default
      - EUREKA_CLIENT_REGISTER_WITH_EUREKA=false
      - EUREKA_CLIENT_FETCH_REGISTRY=false
      - EUREKA_SERVER_ENABLE_SELF_PRESERVATION=false
      - EUREKA_SERVER_REPLICATION_ENABLED=true
      - EUREKA_SERVER_DEFAULT_ZONE=http://eureka-server:8761/eureka/
    # depends_on:
    #   - config-server
    networks:
      store-network:
        aliases:
          - eureka-server

  gateway:
    container_name: gateway
    build:
      context: ./gateway
    ports:
      - "8989:8989"
    environment:
      - SPRING_PROFILES_ACTIVE=default
    # depends_on:
    #   - config-server
    #   - keycloak
    networks:
      store-network:
        aliases:
          - gateway

  ms-product:
    container_name: ms-product
    build:
      context: ./ms-product
    ports:
      - "8084:8084"
    environment:
      - SPRING_PROFILES_ACTIVE=default
    # depends_on:
    #   - config-server
    #   - productdb
    #   - keycloak
    networks:
      store-network:
        aliases:
          - ms-product

  productdb:
    image: mongo:latest
    container_name: productdb
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root
    volumes:
      - productdb_data:/data/db
    restart: on-failure
    networks:
      store-network:
        aliases:
          - productdb

  ms-manufacturer:
    container_name: ms-manufacturer
    build:
      context: ./ms-manufacturer
    ports:
      - "8083:8083"
    environment:
      - SPRING_PROFILES_ACTIVE=default
      - SPRING_KAFKA_PRODUCER_BOOTSTRAP_SERVERS=kafka:19092
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:19092
    # depends_on:
    #   - config-server
    #   - manufacturerdb
    #   - keycloak
    networks:
      store-network:
        aliases:
          - ms-manufacturer

  manufacturerdb:
    image: mysql:8.0
    container_name: manufacturerdb
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: manufacturer_db
    ports:
      - "3306:3306"
    volumes:
      - manufacturerdb_data:/var/lib/mysql
    restart: on-failure
    networks:
      store-network:
        aliases:
          - manufacturerdb

  ms-notification:
    container_name: ms-notification
    build:
      context: ./ms-notification
    ports:
      - "8040:8040"
    environment:
      - SPRING_PROFILES_ACTIVE=default
      - SPRING_KAFKA_CONSUMER_BOOTSTRAP_SERVERS=kafka:19092
      - SPRING_MAIL_HOST=mail-dev
      - SPRING_MAIL_PORT=1025
      - SPRING_MAIL_USERNAME=
      - SPRING_MAIL_PASSWORD=
      - SPRING_MAIL_PROPERTIES_MAIL_SMTP_AUTH=false
      - SPRING_MAIL_PROPERTIES_MAIL_SMTP_STARTTLS_ENABLE=false
      - SPRING_MAIL_PROPERTIES_MAIL_SMTP_STARTTLS_REQUIRED=false
      - SPRING_MAIL_PROTOCOL=smtp

    # depends_on:
    #   - config-server
    #   - productdb
    #   - keycloak
    networks:
      store-network:
        aliases:
          - ms-notification

  keycloakdb:
    image: postgres
    container_name: keycloakdb
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - keycloakdb_data:/var/lib/postgresql/data
    restart: on-failure
    networks:
      store-network:
        aliases:
          - keycloakdb

  keycloak:
    image: quay.io/keycloak/keycloak
    container_name: keycloak
    environment:
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://keycloakdb:5432/keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: password
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_LOG_LEVEL: info
      KC_METRICS_ENABLED: true
      KC_HEALTH_ENABLED: true
    command: start-dev --import-realm
    volumes:
      - ./keycloak/realms:/opt/keycloak/data/import
    depends_on:
      - keycloakdb
    ports:
      - "18080:8080"
    restart: on-failure
    networks:
      store-network:
        aliases:
          - keycloak

  zookeeper:
    image: confluentinc/cp-zookeeper:7.6.0
    container_name: zookeeper
    hostname: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_SERVERS: zookeeper:2888:3888
    volumes:
      - zookeeper_data:/var/lib/zookeeper/data
      - zookeeper_logs:/var/lib/zookeeper/logs
    networks:
      store-network:
        aliases:
          - zookeeper
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "2181"]
      interval: 5s
      timeout: 5s
      retries: 5


  kafka:
    image: confluentinc/cp-kafka:7.6.0
    container_name: kafka
    hostname: kafka
    ports:
      - "9092:9092"
      - "29092:19092"
      - "9999:9999"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:19092,EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092,DOCKER://host.docker.internal:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,DOCKER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_JMX_PORT: 9999
      KAFKA_JMX_HOSTNAME: ${DOCKER_HOST_IP:-127.0.0.1}
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.authorizer.AclAuthorizer
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "true"
    depends_on:
      zookeeper:
        condition: service_healthy
    networks:
      store-network:
        aliases:
          - kafka

  kafdrop:
    image: obsidiandynamics/kafdrop
    container_name: kafdrop
    environment:
      KAFKA_BROKERCONNECT: "kafka:19092"
      SERVER_PORT: 9009
    ports:
      - "9009:9009"
    depends_on:
      - kafka
    networks:
      store-network:
        aliases:
          - kafdrop

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus/prometheus.yaml:/etc/prometheus/prometheus.yml
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--web.enable-lifecycle"
    networks:
      store-network:
        aliases:
          - prometheus

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_INSTALL_PLUGINS=
    volumes:
      - ./monitoring/grafana-datasources:/etc/grafana/provisioning/datasources
      - ./monitoring/grafana-dashboards:/etc/grafana/provisioning/dashboards
      - ./monitoring/grafana-dashboards:/var/lib/grafana/dashboards
    restart: unless-stopped
    networks:
      store-network:
        aliases:
          - grafana

  nexus:
    image: sonatype/nexus3:latest
    container_name: nexus
    ports:
      - "8081:8081"
      - "5000:5000"
    volumes:
      - nexus_data:/nexus-data
    restart: unless-stopped
    networks:
      store-network:
        aliases:
          - nexus

  mail-dev:
    container_name: mail-dev
    image: maildev/maildev
    ports:
      - "1080:1080"
      - "1025:1025"
    restart: on-failure
    networks:
      store-network:
        aliases:
          - mail-dev

volumes:
  keycloakdb_data:
  manufacturerdb_data:
  productdb_data:
  nexus_data:

networks:
  store-network:
    driver: bridge
